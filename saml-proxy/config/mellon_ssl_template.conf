<VirtualHost *:443>
   SSLProxyEngine On
   SSLCertificateFile /usr/local/ssl/apache/public.crt
   SSLCertificateKeyFile /usr/local/ssl/apache/private.key

   # do not require tls 1.3 because aws can not handle that at the moment
   SSLProtocol             all -SSLv3 -TLSv1 -TLSv1.1
   SSLCipherSuite          ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
   SSLHonorCipherOrder     off
   SSLSessionTickets       off

   Header always set Strict-Transport-Security "max-age=63072000"

   Protocols h2 http/1.1

   SSLProxyVerify none
   SSLProxyCheckPeerCN off
   SSLProxyCheckPeerName off
   SSLProxyCheckPeerExpire off

   ErrorLog /dev/stderr
   TransferLog /dev/stdout
   LogLevel debug

   <Directory /var/www/html>
        Allow from all
   </Directory>

  <LocationMatch "^/(?!saml)" >
		MellonEnable mellon_auth_mode
		MellonEndpointPath /mellon/
		MellonSPMetadataFile /etc/httpd/saml2/mellon_metadata.xml
        MellonSPPrivateKeyFile /etc/httpd/saml2/mellon.key
        MellonSPCertFile /etc/httpd/saml2/mellon.crt
        MellonIdPMetadataFile /etc/httpd/saml2/idp_metadata.xml
		AuthType Mellon
		Require valid-user
		MellonSecureCookie On
        MellonCookieSameSite none
        MellonSessionLength 3600
        MellonUser "email"
        RequestHeader unset "misp_secure_header"
		RequestHeader set "misp_secure_header" "%{MELLON_email}e"
		ProxyPassReverse proxy_destination_scheme_host
        ProxyPass proxy_destination_scheme_host
  </LocationMatch>



# thats not the best idea... Saml logout is done by POST request. MISP does not support that.
   <Location /sso/logout >
        RequestHeader unset mellon-cookie
        Redirect /sso/logout https://otto.de
    </Location>

 </VirtualHost>